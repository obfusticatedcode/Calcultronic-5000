// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Calculator></Calculator> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Calculator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Display
          displayValue="0"
        />,
        <Keypad
          callOperator={[Function]}
          numbers={
            Array [
              "9",
              "8",
              "7",
              "6",
              "5",
              "4",
              "3",
              "2",
              "1",
              ".",
              "0",
              "ce",
            ]
          }
          operators={
            Array [
              "/",
              "x",
              "-",
              "+",
            ]
          }
          setOperator={[Function]}
          updateDisplay={[Function]}
        />,
      ],
      "className": "Calculator__container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "displayValue": "0",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "callOperator": [Function],
          "numbers": Array [
            "9",
            "8",
            "7",
            "6",
            "5",
            "4",
            "3",
            "2",
            "1",
            ".",
            "0",
            "ce",
          ],
          "operators": Array [
            "/",
            "x",
            "-",
            "+",
          ],
          "setOperator": [Function],
          "updateDisplay": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Display
            displayValue="0"
          />,
          <Keypad
            callOperator={[Function]}
            numbers={
              Array [
                "9",
                "8",
                "7",
                "6",
                "5",
                "4",
                "3",
                "2",
                "1",
                ".",
                "0",
                "ce",
              ]
            }
            operators={
              Array [
                "/",
                "x",
                "-",
                "+",
              ]
            }
            setOperator={[Function]}
            updateDisplay={[Function]}
          />,
        ],
        "className": "Calculator__container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "displayValue": "0",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "callOperator": [Function],
            "numbers": Array [
              "9",
              "8",
              "7",
              "6",
              "5",
              "4",
              "3",
              "2",
              "1",
              ".",
              "0",
              "ce",
            ],
            "operators": Array [
              "/",
              "x",
              "-",
              "+",
            ],
            "setOperator": [Function],
            "updateDisplay": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
